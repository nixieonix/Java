package mmk.igra;

import java.util.Random;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.os.Handler;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.SubMenu;
import android.view.View;
import android.view.View.OnTouchListener;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import mmk.igra.R;

public class Igra extends Activity {

	//spremenljivke za ponavljajoča opravila (premikanje balona in štetje časa)
	private Handler mHandler = new Handler();
	private Runnable mUpdateTimeTask;
	private Handler mHandlerCasa = new Handler();
	private Runnable mTimeTask;
	
	//spremenljivke, ki določajo parametre igre
	private int stevecZadetkov = 0;
	private int tezavnost = 1;
	
	//spremenljivke, ki določajo osnovno periodo premikanja balona in trajanje igre:
	private final int OSNOVNA_PERIODA = 1000; // v milisekundah!
	private final int TRAJANJE_IGRE = 20000; // v milisekundah!
	
	//spremenljivke, ki določajo velikost igralne ploskve:
	private int resolucijaX = 320;
	private int resolucijaY = 440;
	private int velikostSlikeX = 50;
	private int velikostSlikeY = 50;
	
	//konstante, ki identificirajo postavke v menijih:
	private final int MENU_NOVA_IGRA = 0;
	private final int MENU_TEZAVNOST = 1;
	private final int MENU_TEZAVNOST_LAHKA = 10;
	private final int MENU_TEZAVNOST_SREDNJA = 20;
	private final int MENU_TEZAVNOST_TEZKA = 30;
	private final int MENU_IZHOD = -1;
	
	//spremenljivke, ki se sklicujejo na gradnike uporabniškega vmesnika:
	private ImageView imageView;
	private TextView textView;

	// spremenljivke,ki jih potrebujemo v notranjih razredih (zato niso 'private')
	MediaPlayer predvajalnik;	//predvajalnik medijskih vsebin
	int periodaPremika;	//perioda premikanja, ki je trenutno v veljavi
	Random generator;	//generator naključnih števil
	long zacetniCas;	//čas, ko se je začela nova igra
	Activity activity;	//referenca na aktivnost

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		// to bomo potrebovali za referenco na Activity v notranjih razredih,
		// kjer sam kazalec 'this' ne bo več kazal na Activity
		this.activity = this;
		
		/******
		1. NALOGA: IZVEDITE INICIALIZACIJO
		*/

		
		/******
		2. NALOGA: ZAČNITE Z IGRO
		*/
	}

	/******
	TUKAJ VKLJUČITE OSTALE METODE, KI JIH BOSTE POTREBOVALI. METODE NAJ BODO PRIVATNE.
	*/
}